/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var square = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[11.8332053984878, 44.950951330959384],
          [11.7782737578628, 44.79523758054879],
          [12.1243430938003, 44.76306921047978],
          [12.1573020781753, 44.92470418537108]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/******************************************************
 * Author: Emanuele Spirito
 * Copyright: 2025
 * See latest stable version on my GitHub at 
 * https://github.com/emanuelespiritowork/gee-utils-scripts
*******************************************************/

/******************************************************
 * ABOUT THIS PROJECT
*******************************************************/

/******************************************************
 * LOAD FUNCTIONS PATH
*******************************************************/

var clip_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/clip_img_coll.js');
var plot_stretch_img = require('users/emanuelespiritowork/SharedRepo:functions/plot_stretch_img');

/******************************************************
 * SCRIPT
*******************************************************/

var AOI = ee.FeatureCollection("projects/ee-emanuelespiritowork/assets/AOI");
var export_folder = ee.String("Exports");
var id_name = ee.String("id_geom");
var scale_to_use = ee.Number(30);
var stretch = ee.Number(2);
var threshold_percentage = ee.Number(0.5);
var transect = null;

var image_coll = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED")
.filterDate('2024-12-15','2025-01-24')
.filterBounds(AOI.AOI)
.filter(ee.Filter.gt("CLOUDY_PIXEL_PERCENTAGE",30))
.sort("CLOUDY_PIXEL_PERCENTAGE",true);

var first_image = image_coll.first();

AOI = AOI;
//AOI = ee.FeatureCollection(square);
var geometry = AOI.geometry();
print(AOI);
print(geometry);

var clip_img = function(image){
    var clipped_image = image.clipToBoundsAndScale({
      geometry: geometry,
      scale: scale_to_use
    }).clip(AOI);
    var previous_geometry = image.geometry();
    var intersection = geometry.intersection(previous_geometry);
    print("intersection",intersection);
    var footprint = ee.Algorithms.GeometryConstructors.MultiGeometry({
      geometries: intersection.geometries()
    });
    return clipped_image.set({"system:footprint": footprint});
  };
  
//var clipped_image = clip_img(first_image);

var clipped_image = clip_img_coll.clip_img_coll(image_coll,AOI,scale_to_use);

var s2_mask_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/s2_mask_img_coll');

var masked_image = s2_mask_img_coll.s2_mask_img_coll(clipped_image);
/*
var pixel_percentage_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/pixel_percentage_img_coll');

print(masked_image);

var pixel_percentage_image = pixel_percentage_img_coll.pixel_percentage_img_coll(masked_image,AOI,0.5,30);
*/
Map.addLayer(clipped_image.first());
Map.addLayer(masked_image.first());
//Map.addLayer(pixel_percentage_image.first());
/*
var s2_evi_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/s2_evi_img_coll');

var evi = s2_evi_img_coll.s2_evi_img_coll(clipped_image);

var time_series_create_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/time_series_create_img_coll');

var time_series = time_series_create_img_coll.time_series_create_img_coll(evi,AOI,"id_geom",30);

var time_series_get_plot_ts = require('users/emanuelespiritowork/SharedRepo:functions/time_series_get_plot_ts');

var plot = time_series_get_plot_ts.time_series_get_plot_ts(time_series,"evi2");

print(time_series);
print(plot);
*/