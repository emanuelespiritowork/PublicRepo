var field = require('users/emanuelespiritowork/SharedRepo:assets/AOI');

var image_coll = ee.ImageCollection("COPERNICUS/S2_SR_HARMONIZED")
.filterDate('2024-12-15','2025-01-24')
.filterBounds(field.AOI);

var clip_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/clip_img_coll');

var clipped_img_coll = clip_img_coll.clip_img_coll(image_coll);

Map.addLayer(clipped_img_coll,{},"clipped_img_coll");

var s2_evi_img = require('users/emanuelespiritowork/SharedRepo:functions/s2_evi_img');

//image_coll = image_coll.map(s2_evi_img.s2_evi_img);

image_coll = image_coll.select(['B1','B2']);

print(image_coll);

var image = image_coll.first();
Map.addLayer(image,{},'image');
Map.centerObject(field.AOI);

var single_feature = require('users/emanuelespiritowork/SharedRepo:assets/single_feature');
var scale_to_use = require('users/emanuelespiritowork/SharedRepo:assets/scale_to_use');
var id_name = require('users/emanuelespiritowork/SharedRepo:assets/id_name');
var AOI = require('users/emanuelespiritowork/SharedRepo:assets/AOI');

var space_series_AOI_img = function(img){
  var date = img.get('system:time_start');
  var layer_names = img.bandNames();
  
  //print(layer_names);
  
  var create_single_field_value = function(feature_of_cycle){
    var values = ee.List(img.reduceRegion({
      geometry: feature_of_cycle.geometry(),
      reducer: ee.Reducer.median(),
      scale: scale_to_use.scale_to_use,
      bestEffort: true}).values());
      
    //print("values",values);
    
    var keys_list = ['system:time_start','date','id'];
    keys_list = ee.List(keys_list).cat(layer_names);
    
    //print("keys_list",keys_list);
    
    var values_list = [date,ee.Date(date).format('Y/M/d'), ee.String(feature_of_cycle.getString(id_name.id_name))];
    values_list = ee.List(values_list).cat(values);
    
    //print("values_list",values_list);
      
    var feature_of_single_field = ee.Feature(null, ee.Dictionary.fromLists({
      keys: keys_list,
      values: values_list
    }));
    
    return feature_of_single_field;
  };
  
  //var all_field_features = AOI.AOI.map(create_single_field_value);
  
  var all_field_features = create_single_field_value(single_feature.single_feature);
  
  return all_field_features;
};

var new_feature = image_coll.map(space_series_AOI_img);

print(new_feature);







/*


//////// AOI

var time_series_create_for_AOI_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/time_series_create_for_AOI_img_coll');

var time_series = time_series_create_for_AOI_img_coll.time_series_create_for_AOI_img_coll(image_coll);

print(time_series);

//var time_series_export_ts = require('users/emanuelespiritowork/SharedRepo:functions/time_series_export_ts');

//var null_var_1 = time_series_export_ts.time_series_export_ts(time_series);

//////// single_feature
var time_series_create_for_single_feature_img_coll = require('users/emanuelespiritowork/SharedRepo:functions/time_series_create_for_single_feature_img_coll');

var time_series_2 = time_series_create_for_single_feature_img_coll.time_series_create_for_single_feature_img_coll(image_coll);

print(time_series_2);

var time_series_get_plot_for_AOI_ts = require('users/emanuelespiritowork/SharedRepo:functions/time_series_get_plot_for_AOI_ts');

var plot = time_series_get_plot_for_AOI_ts.time_series_get_plot_for_AOI_ts(time_series);

print(plot);

//var time_series_export_ts = require('users/emanuelespiritowork/SharedRepo:functions/time_series_export_ts');

//var null_var_2 = time_series_export_ts.time_series_export_ts(time_series);
*/